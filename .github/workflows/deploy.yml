name: Deploy Nextcloud

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4

      - name: Lint chart
        run: helm lint .

  deploy:
    needs: lint
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4

      - name: Ensure kubectl, jq, and gnupg are installed (optional)
        run: |
          if ! command -v kubectl &> /dev/null; then
            echo "kubectl is not installed, please install it";
          fi
          if ! command -v jq &> /dev/null; then
            echo "jq is not installed, please install it";
          fi
          if ! command -v gpg &> /dev/null; then
            echo "gnupg is not installed, skipping its installation";
          fi

      - name: Configure kubeconfig
        run: |
          mkdir -p ~/.kube
          echo "${{ secrets.KUBE_CONFIG }}" | base64 -d > ~/.kube/config
          kubectl config use-context ${{ secrets.KUBE_CONTEXT }}

      - name: Deploy test environment
        run: |
          helm upgrade --install ${{ secrets.APP_NAME }}-test . \
            --namespace ${{ secrets.APP_NAME }}-test \
            --create-namespace \
            --set global.deployment.active=blue \
            --set ingress.enabled=true \
            --set ingress.hosts[0].host="test.${{ secrets.DOMAIN }}"

      - name: Test deployment
        run: |
          for i in {1..30}; do
            if kubectl get pods -n ${{ secrets.APP_NAME }}-test -l app.kubernetes.io/component=nextcloud -o jsonpath='{.items[0].status.conditions[?(@.type=="Ready")].status}' | grep -q "True"; then
              break
            fi
            sleep 5
          done
          
          POD_NAME=$(kubectl get pods -n ${{ secrets.APP_NAME }}-test -l app.kubernetes.io/component=nextcloud -o jsonpath="{.items[0].metadata.name}")
          kubectl exec -n ${{ secrets.APP_NAME }}-test $POD_NAME -- curl -s http://localhost/status.php | jq -e '.installed' | grep -q true

      - name: Cleanup test
        if: always()
        run: |
          helm uninstall ${{ secrets.APP_NAME }}-test -n ${{ secrets.APP_NAME }}-test || true
          kubectl delete namespace ${{ secrets.APP_NAME }}-test || true
          helm uninstall ${{ secrets.APP_NAME }}-test -n ${{ secrets.APP_NAME }}-test || true
          kubectl delete namespace ${{ secrets.APP_NAME }}-test || true
