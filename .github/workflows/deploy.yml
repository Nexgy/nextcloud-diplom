name: Deploy Nextcloud

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v3
      
      - name: Install Helm
        uses: azure/setup-helm@v3
        with:
          version: ${{ secrets.HELM_VERSION }}
          
      - name: Lint chart
        run: helm lint .

  deploy:
    needs: lint
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v3
      
      - name: Install kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: ${{ secrets.KUBECTL_VERSION }}
          
      - name: Install Helm
        uses: azure/setup-helm@v3
        with:
          version: ${{ secrets.HELM_VERSION }}
          
      - name: Configure kubeconfig
        run: |
          mkdir -p ~/.kube
          echo "${{ secrets.KUBE_CONFIG }}" > ~/.kube/config
          kubectl config use-context ${{ secrets.KUBE_CONTEXT }}
          
      - name: Deploy test environment
        run: |
          helm upgrade --install ${{ secrets.APP_NAME }}-test . \
            --namespace ${{ secrets.APP_NAME }}-test \
            --create-namespace \
            --set global.deployment.active=blue \
            --set ingress.enabled=true \
            --set ingress.hosts[0].host="test.${{ secrets.DOMAIN }}"
            
      - name: Test deployment
        run: |
          for i in {1..30}; do
            if kubectl get pods -n ${{ secrets.APP_NAME }}-test -l app.kubernetes.io/component=nextcloud | grep -q "Running"; then
              break
            fi
            sleep 5
          done
          
          POD_NAME=$(kubectl get pods -n ${{ secrets.APP_NAME }}-test -l app.kubernetes.io/component=nextcloud -o jsonpath="{.items[0].metadata.name}")
          kubectl exec -n ${{ secrets.APP_NAME }}-test $POD_NAME -- curl -s http://localhost/status.php | jq -e '.installed' | grep -q true
          
      - name: Cleanup test
        if: always()
        run: |
          helm uninstall ${{ secrets.APP_NAME }}-test -n ${{ secrets.APP_NAME }}-test || true
          kubectl delete namespace ${{ secrets.APP_NAME }}-test || true
          
  deploy-blue:
    needs: deploy
    runs-on: self-hosted
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3
      
      - name: Install kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: ${{ secrets.KUBECTL_VERSION }}
          
      - name: Install Helm
        uses: azure/setup-helm@v3
        with:
          version: ${{ secrets.HELM_VERSION }}
          
      - name: Configure kubeconfig
        run: |
          mkdir -p ~/.kube
          echo "${{ secrets.KUBE_CONFIG }}" > ~/.kube/config
          kubectl config use-context ${{ secrets.KUBE_CONTEXT }}
          
      - name: Deploy blue
        run: |
          helm upgrade --install ${{ secrets.APP_NAME }}-blue . \
            --namespace ${{ secrets.BLUE_NAMESPACE }} \
            --create-namespace \
            --set global.deployment.active=blue \
            --set environments.blue.enabled=true \
            --set environments.green.enabled=false \
            --set ingress.enabled=false
            
      - name: Test blue
        run: |
          for i in {1..30}; do
            if kubectl get pods -n ${{ secrets.BLUE_NAMESPACE }} -l app.kubernetes.io/component=nextcloud | grep -q "Running"; then
              break
            fi
            sleep 5
          done
          
          POD_NAME=$(kubectl get pods -n ${{ secrets.BLUE_NAMESPACE }} -l app.kubernetes.io/component=nextcloud -o jsonpath="{.items[0].metadata.name}")
          kubectl exec -n ${{ secrets.BLUE_NAMESPACE }} $POD_NAME -- curl -s http://localhost/status.php | jq -e '.installed' | grep -q true
          
  deploy-green:
    needs: deploy-blue
    runs-on: self-hosted
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3
      
      - name: Install kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: ${{ secrets.KUBECTL_VERSION }}
          
      - name: Install Helm
        uses: azure/setup-helm@v3
        with:
          version: ${{ secrets.HELM_VERSION }}
          
      - name: Configure kubeconfig
        run: |
          mkdir -p ~/.kube
          echo "${{ secrets.KUBE_CONFIG }}" > ~/.kube/config
          kubectl config use-context ${{ secrets.KUBE_CONTEXT }}
          
      - name: Deploy green
        run: |
          helm upgrade --install ${{ secrets.APP_NAME }}-green . \
            --namespace ${{ secrets.GREEN_NAMESPACE }} \
            --create-namespace \
            --set global.deployment.active=green \
            --set environments.blue.enabled=false \
            --set environments.green.enabled=true \
            --set ingress.enabled=false
            
      - name: Test green
        run: |
          for i in {1..30}; do
            if kubectl get pods -n ${{ secrets.GREEN_NAMESPACE }} -l app.kubernetes.io/component=nextcloud | grep -q "Running"; then
              break
            fi
            sleep 5
          done
          
          POD_NAME=$(kubectl get pods -n ${{ secrets.GREEN_NAMESPACE }} -l app.kubernetes.io/component=nextcloud -o jsonpath="{.items[0].metadata.name}")
          kubectl exec -n ${{ secrets.GREEN_NAMESPACE }} $POD_NAME -- curl -s http://localhost/status.php | jq -e '.installed' | grep -q true
          
  switch:
    needs: [deploy-blue, deploy-green]
    runs-on: self-hosted
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3
      
      - name: Install kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: ${{ secrets.KUBECTL_VERSION }}
          
      - name: Install Helm
        uses: azure/setup-helm@v3
        with:
          version: ${{ secrets.HELM_VERSION }}
          
      - name: Configure kubeconfig
        run: |
          mkdir -p ~/.kube
          echo "${{ secrets.KUBE_CONFIG }}" > ~/.kube/config
          kubectl config use-context ${{ secrets.KUBE_CONTEXT }}
          
      - name: Switch traffic
        run: |
          CURRENT_COLOR=$(kubectl get ingress -n ${{ secrets.PRODUCTION_NAMESPACE }} ${{ secrets.APP_NAME }} -o jsonpath='{.metadata.annotations.nginx\.ingress\.kubernetes\.io/blue-green-deploy}' || echo "blue")
          
          if [ "$CURRENT_COLOR" = "blue" ]; then
            NEW_COLOR="green"
            NEW_NAMESPACE=${{ secrets.GREEN_NAMESPACE }}
            OLD_NAMESPACE=${{ secrets.BLUE_NAMESPACE }}
          else
            NEW_COLOR="blue"
            NEW_NAMESPACE=${{ secrets.BLUE_NAMESPACE }}
            OLD_NAMESPACE=${{ secrets.GREEN_NAMESPACE }}
          fi
          
          echo "Activating $NEW_COLOR deployment from $NEW_NAMESPACE"
          
          helm upgrade ${{ secrets.APP_NAME }} . \
            --namespace ${{ secrets.PRODUCTION_NAMESPACE }} \
            --set global.deployment.active=$NEW_COLOR \
            --set environments.$NEW_COLOR.enabled=true \
            --set environments.$OLD_COLOR.enabled=false \
            --set ingress.enabled=true \
            --set ingress.hosts[0].host="${{ secrets.DOMAIN }}" \
            --reuse-values
            
          echo "Removing old $OLD_NAMESPACE deployment"
          kubectl delete namespace $OLD_NAMESPACE || true
          
  cleanup:
    needs: switch
    if: failure()
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v3
      
      - name: Install kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: ${{ secrets.KUBECTL_VERSION }}
          
      - name: Configure kubeconfig
        run: |
          mkdir -p ~/.kube
          echo "${{ secrets.KUBE_CONFIG }}" > ~/.kube/config
          kubectl config use-context ${{ secrets.KUBE_CONTEXT }}
          
      - name: Cleanup
        run: |
          kubectl delete namespace ${{ secrets.BLUE_NAMESPACE }} ${{ secrets.GREEN_NAMESPACE }} || true 
